#
# This pipeline builds and pushes the image(s) that all users will access when 
# launching a new personal notebook server
#

name: Deploy Working Image

on:
  push:
    paths:
      - './jupyterhub/workspaces/**'

  workflow_dispatch:

jobs:

  deploy-analysis-image:

    runs-on: ubuntu-latest
    env:
      AWS__DEFAULT_REGION: 'us-east-1' 
    
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v1
        with:
          python-version: 3.9
        
      - name: Install AWS CLI
        run: |
          sudo python -m pip install awscli
      
      - name: Create AWS Default Profile
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
          aws configure set region ${{ env.AWS__DEFAULT_REGION }} --profile default
      
      # [TODO] Consider Managing this With Terraform Instead!!
      - name: Create Repository if DNE
        run: |
          aws ecr create-repository \
            --profile default \
            --repository-name jupyterworkspace \
            --image-scanning-configuration scanOnPush=true || exit 0

      - name: Cached Docker Build
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: "${{ secrets.AWS_ACCESS_KEY_ID }}"  
          password: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          registry: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS__DEFAULT_REGION }}.amazonaws.com"
          image_name: geospatialworkspace
          context: ./jupyterhub/workspaces/geospatial
          image_tag: latest
          push_image_and_stages: true
